boite noire => non accès au code
boite blanche => accès a ucode

chacun des tests fonctionnels valide une partie du code
Ensemble des cas qui pourraient poser une erreur devraient être tester => cas limite
Approche IHM (PAE)
	permet de tester les cas d'utilisation (ensembler de scenarios)
	Prévoir les tests dès le début
	évolution au niveau du temps
	Garder les données qui ont permis de reproduire le bug + scénario test
		Intégration dans le scénario de test
		Permet de faire en sorte qu'il ne réapparaisse plus
	Document de test
		on n'y effectue pas le test
		permet de garder une trace de l'exécution d'un test
		Voir dia 15 => informations à mettre sur un document de test
	Scénario de tests
		3 étapes majeures
			1. Commencement avec le cas le plus général
			2. Envisager alternatives => cas qui fonctionnet bien (chemin que l'utilisateur prend, ...)
			3. Imagnier cas erreur (LEs erreurs doivent être sous contrôle)
		plusieurs étapes mineures
		Eviter de tester tous les cas particulier mais généraliser certains cas (tenter quelques cas particulier)
			On ne peut pas les tester tous
		Cas d'erreur nombreux
			Erreurs isolées
				Données qui ne correspond pas
				Valeur null
				Format invalide
				=> Pour plus de détails voir dia 19 + imagination
			Recherche
				Cas où les critères ne renvoient rien
				Cas où on a énormément de données (on ne charge que les lignes visibles, ...)
			Lors de la correction d'une erreur, il faut vérifier qu'il y ait bien un retour à la normale
	Formalisme
		Tout doit être maintenable
		Celui du prof n'est pas obligatoire (mais nn pénalisable)





Remarque générale
	Pas de copie d'écran
	Obligatoirement un Header
	Exemple de tests fonctionnels => dia :
	Etat de la Db
	Titre => one ne fais rien
	Il ne faut pas détailler les IHM's (Pas de description de vue)


Projection Travail - Semaine 5
	BD
		Table utilisateurs
			INSERT (afin de se connecter)
		Droit d'avoir fonctionnalites de base de la DB
			FK
			PK
			NULL
			idx_unique (probable mais nn sur)
		Peux pas avoir
			CHECK
			TRIGGER
		=> Inverse Projet SQL
	Architecture
	UC
		se connecter
		inscription pas encore à developer
	Rapport
		Certaines règles seront toujours à respecter
	Tests fonctionnels
	Diagramme de classe
	Diagramme de Séquence
	Diagramme des CU
	Modifier DSD ou diagramme de flux (si commentaire)
	=> ? à vérifier